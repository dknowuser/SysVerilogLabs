// Copyright (C) 1991-2012 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "02/22/2020 16:37:25"
                                                                                
// Verilog Test Bench template for design : qlab3
// 
// Simulation tool : QuestaSim (Verilog)
// 
`timescale 1 ns/ 1 ns
module qlab3_vlg_tst();                                         
// test vector input registers
reg clock;
reg [7:0] d = 0;
reg reset;
reg start;
// wires                                               
wire [7:0] ind_out;
wire ready;
reg [16:0] i = 0;
reg [10:0] j = 0;
reg [7:0] temp;

// assign statements (if any)                          
qlab3 i1 (
// port map - connection between master ports and signals/registers   
	.clock(clock),
	.d(d),
	.ind_out(ind_out),
	.ready(ready),
	.reset(reset),
	.start(start)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin        
	clock = 0;
	start = 0;
	reset = 1;
	d = 0;
	for(i = 0; i < 65535; i = i + 1)
	begin
		temp = 0;
		while((((d >> temp) & 1)==0) && (temp < 8))
			temp=temp+1;
		reset = 1;
		#5;
		reset = 0;
		start = 1;
		
		for(j = 0; j < 20; j = j + 1)
		begin
			clock = ~clock;
			#10;
		end
		d = d + 1;
	end
// --> end                                             
$display("Running testbench");                       
end                                          
endmodule