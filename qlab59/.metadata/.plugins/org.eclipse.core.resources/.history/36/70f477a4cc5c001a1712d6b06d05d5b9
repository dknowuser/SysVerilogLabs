/*
 * source.cpp
 *
 *  Created on: 02.03.2020
 *      Author: maro4_000
 */
#include "system.h"
#include "altera_avalon_pio_regs.h"
#include "alt_types.h"

#define MAX_DATA_VALUE	255
#define CPU_DIV_COEFF	4000
#define BIT_COUNT		8

void divide_cpu_clock(void)
{
	alt_u16 i;
	for(i = 0; i < CPU_DIV_COEFF; i++);
};

//int main(void) __attribute__((weak, alias("alt_main")));
int main(void)
{
	// DECLARATION BLOCK
	alt_u16 data;			// Data to transmit
	alt_u8 temp;			// Temporary value
	alt_u8 parity_bit;		// Parity bit value
	alt_u8 current_bit;		// Current data bit

	// DECLARATION BLOCK ENDS

	for(data = 0; data < (MAX_DATA_VALUE + 1); data++) {
		parity_bit = 0;
		current_bit = 0;

		// Send start-bit
		IOWR_ALTERA_AVALON_PIO_DATA(PIO_0_BASE, 0);
		divide_cpu_clock();

		// Send data
		for(current_bit = 0; current_bit < BIT_COUNT; current_bit++) {
			temp = (data >> current_bit) & 1;
			parity_bit ^= temp;
		};
	};

	return 0;
}
